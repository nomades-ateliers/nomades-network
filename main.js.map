{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"tslib\"","webpack:///external \"@nestjs/common\"","webpack:///./apps/api/src/environments/environment.prod.ts","webpack:///external \"mongoose\"","webpack:///external \"express\"","webpack:///./apps/api/src/app/services/xls.service.ts","webpack:///external \"@nestjs/swagger\"","webpack:///./apps/api/src/app/services/mailer.service.ts","webpack:///./apps/api/src/app/app.utils.ts","webpack:///./libs/api-interfaces/src/index.ts","webpack:///external \"@nestjs/mongoose\"","webpack:///external \"@nest-modules/mailer\"","webpack:///./apps/api/src/app/app.service.ts","webpack:///./apps/api/src/app/app.redis.ts","webpack:///./apps/api/src/app/features/users/users.service.ts","webpack:///./libs/api-schemas/src/lib/user-training.schema.ts","webpack:///external \"@nestjs/platform-express\"","webpack:///external \"body-parser\"","webpack:///external \"jsonwebtoken\"","webpack:///./libs/api-schemas/src/index.ts","webpack:///external \"bcryptjs\"","webpack:///./libs/api-interfaces/src/lib/api-interfaces.ts","webpack:///./libs/api-interfaces/src/lib/users/index.ts","webpack:///./libs/api-interfaces/src/lib/users/users.interface.ts","webpack:///./libs/api-interfaces/src/lib/users/users.model.ts","webpack:///./libs/api-schemas/src/lib/api-schemas.ts","webpack:///./libs/api-schemas/src/lib/user-schema.ts","webpack:///external \"@nestjs/core\"","webpack:///./apps/api/src/app/app.module.ts","webpack:///./apps/api/src/app/app.controller.ts","webpack:///external \"multer\"","webpack:///external \"fs\"","webpack:///external \"convert-excel-to-json\"","webpack:///external \"uuid\"","webpack:///external \"ioredis\"","webpack:///external \"path\"","webpack:///./apps/api/src/app/authorization.middleware.ts","webpack:///./apps/api/src/app/features/users/users.module.ts","webpack:///./libs/api-schemas/src/lib/user-skill.schema.ts","webpack:///./apps/api/src/app/features/users/users.controller.ts","webpack:///./apps/api/src/app/app-error.interceptor.ts","webpack:///external \"rxjs\"","webpack:///external \"rxjs/operators\"","webpack:///./apps/api/src/app/app-errors.filter.ts","webpack:///external \"lodash\"","webpack:///./apps/api/src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 45);\n","module.exports = require(\"tslib\");","module.exports = require(\"@nestjs/common\");","export const environment = {\n          production: true,\n          globalPrefix: 'api',\n          host: process.env.HOST || 'localhost',\n          port: process.env.PORT || '',\n          tokenExpire: '86400000',\n          secretToken: '81Fx6B2B72F3C4F74B12&A6B89874',\n          // mongodb setting\n          dbUser: process.env.DB_USER || 'nomade',\n          dbPwd: process.env.DB_PWD || 'nomade24',\n          dbBdd: process.env.DB_DDB || 'nomades-test',\n          dbHost: process.env.DB_HOST || 'ds038547.mlab.com:38547',\n          // redis setting\n          redisHost: process.env.REDIS_SERVERS || 'undefined',\n          redisPort: process.env.REDIS_PORT || 'undefined', \n          redisUser: process.env.REDIS_USER || 'undefined',\n          redisPwd: process.env.REDIS_PASS || 'undefined',\n          mailer: {\n            from: process.env.MAILER_FROM || '',\n            replayTo: process.env.MAILER_REPLAYTO || 'undefined',\n            user: process.env.MAILER_USER || '',\n            pass: process.env.MAILER_PASS || '',\n            host: process.env.MAILER_HOST || ''\n          },\n          fronts: {\n            pwa: 'https://nomades.world'\n          },\n          prefix: {\n            confirmEmail: 'confirmEmail'\n          },\n          getDBHost: () => 'mongodb://' + (process.env.DB_USER || 'nomade') + ':' + ( process.env.DB_PWD || 'nomade24') + '@' + (process.env.DB_HOST || 'ds038547.mlab.com:38547') + '/' + (process.env.DB_DDB || 'nomades-test'),\n          version: '1.0.0-beta.1.0.8'\n        };","module.exports = require(\"mongoose\");","module.exports = require(\"express\");","import { Injectable } from '@nestjs/common';\nimport { readFileSync }  from 'fs';\nimport * as excelToJson from 'convert-excel-to-json';\n\n@Injectable()\nexport class XLSService {\n\n  constructor(\n  ) {}\n\n  readLocalFile(filePath: string) {\n    try {\n      const data = readFileSync(filePath, {encoding: 'utf-8'});\n      return data;\n    } catch (error) {\n      throw new Error('unable to get version')\n    }\n  }\n\n  excelToJson(sourceFile: string): any {\n    try {\n      const result = excelToJson({\n        sourceFile\n      });\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  normalize(jsonArray: any[]) {\n    const [header, ...students] = jsonArray;\n    return students.map(s => this.renameKeys(header, s));\n    \n  }\n\n  renameKeys(keysMap, obj) {\n    return Object.keys(obj).reduce(\n        (acc, key) => ({\n          ...acc,\n          ...{ [(keysMap[key] || key || '')\n            .toLowerCase()\n            .replace(/é/gi, \"e\")\n            .replace(/è/gi, \"e\")\n            .replace(/à/gi, \"a\")\n            .replace(/\\s/g, '_')\n          ]: obj[key] }\n        }),\n      {}\n    );\n  }\n}\n","module.exports = require(\"@nestjs/swagger\");","import { Injectable, BadRequestException } from '@nestjs/common';\nimport { MailerService, ISendMailOptions } from '@nest-modules/mailer';\nimport { environment } from '../../environments/environment';\n\nexport const EMAIL_DEFAULT = {\n  register: {\n    to: null, // list of receivers\n    from: null, // sender address\n    subject: `[Nomades World] Confirmation d'inscription ✔`, // Subject line\n    text: (url: string) => `\n      Bienvenu sur Nomades World.\n      Veullez vous rendre sur cette adresse pour confirmer votre email et valider votre compte.\n      ${url}\n    `, // plaintext body\n    html: (url: string) => `\n      <p>\n        Bienvenu sur Nomades World.<br/>\n        Veullez vous rendre sur cette adresse pour confirmer votre email et valider votre compte.\n      </p>\n      <a href=\"${url}\" target=\"_blank\">\n        confirmer mon compte Nomades World avec mon email.\n      </a>\n    `, // HTML body content\n  },\n  default: {\n    to: 'nicolas@nomades.ch', // list of receivers\n    from: environment.mailer.from, // sender address\n    subject: `[Nomades World] Test: default subject`, // Subject line\n    text: `\n      Default plain text\n    `, // plaintext body\n    html: `\n      <p>\n        Default HTML text\n      </p>\n    `, // HTML body content\n  }\n};\n\n@Injectable()\nexport class AppMailerService {\n\n  constructor(\n    private readonly mailerService: MailerService\n  ) {}\n\n  async sendMail(options: ISendMailOptions = null) {\n    const {\n      to = EMAIL_DEFAULT['default'].to,\n      from = EMAIL_DEFAULT['default'].from,\n      subject = EMAIL_DEFAULT['default'].subject,\n      text = EMAIL_DEFAULT['default'].text,\n      html = EMAIL_DEFAULT['default'].html,\n    } = options || {};\n    if (!from || !to){\n      throw new BadRequestException('No sender or recever available to send email with Nestjs Mailer'); \n    }\n    // console.log('to send--->', {to, from, subject, text, html});\n    return await this.mailerService\n      .sendMail({to, from, subject, text, html})\n      .then(() =>({result: true}))\n      .catch((error) => ({result: false, error}));\n  }\n\n}\n","import { Request } from 'express';\nimport * as jwt from 'jsonwebtoken';\nimport { v4 } from 'uuid';\n// app\nimport { redis } from './app.redis';\nimport { environment } from '../environments/environment';\nimport { extname } from 'path';\n\n/**\n * Methode to generate usertoken from value\n * @param secretToken string Secret String from backend to generate/verify user token\n * @param expire number TimeStampe of token expiration\n * @param doc any Object with value to generate user token\n */\nexport const getToken = (\n  secretToken = null,\n  expire = null,\n  doc: any = {}\n): string => {\n  // prevent unexisting value\n  if (! doc.uid || !doc.email) return '';\n  // prepare payload\n  const payload = {uid: doc.uid, email: doc.email};\n  // create new token with params\n  return jwt.sign(payload, secretToken, {\n    expiresIn: +expire // use jwtExpire as number type\n  });\n};\n\n/**\n * extractToken(): Method to safty extract usertoken from http request\n * @param req express.Request Request Class from Express JS\n */\nexport const extractToken = (req: Request): string => {\n  if (!req) return '';\n  // extract data and prevent unexisting proprety `token`\n  const {body = {token: null}, query = {token: null}} = req;\n  // extract value from one of thoses\n  const token = body.token ||\n    query.token ||\n    req.get('x-access-token') ||\n    req.get('authentication') ||\n    req.get('authorization') || null;\n  // create arrray with empty value posible\n  const maps = {\n    'NaN': NaN,\n    'null': null,\n    'undefined': undefined,\n    'Infinity': Infinity,\n    '-Infinity': -Infinity\n  };\n  // return value empty or existing token finded\n  return ((token in maps) ? maps[token] : token);\n};\n\nexport const checkAuthentication = async (req: Request) => {\n  // look for the token in the incoming request:\n  const token = extractToken(req);\n  if (!token || token === undefined || token === 'undefined') {\n    return null;\n  }\n  try {\n    const decoded = await jwt.verify(token, environment.secretToken);\n    (req as any).decoded = decoded;\n    return decoded;\n  } catch (e) {\n    return null;\n  }\n}\n\n\nexport const confirmEmailLink = async (uid: string): Promise<string> => {\n  // get random id\n  const id = v4();\n  // set data in redis with uniqu key and expire time\n  await redis.set(environment.prefix.confirmEmail + id, uid, 'ex', 60 * 60 * 15);\n  // return url ready to confirm email\n  return `${environment.fronts.pwa}/confirme?token=${id}`;\n};\n\nexport const editFileName = (req, file, callback) => {\n  const name = file.originalname.split('.')[0];\n  const fileExtName = extname(file.originalname);\n  const randomName = Array(4)\n    .fill(null)\n    .map(() => Math.round(Math.random() * 16).toString(16))\n    .join('');\n  callback(null, `bdd-students${fileExtName}`);\n};","export * from './lib/api-interfaces';\n","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@nest-modules/mailer\");","import { Injectable } from '@nestjs/common';\nimport { Message, APIResponse } from '@nomades-network/api-interfaces';\n\n@Injectable()\nexport class AppService {\n  getData(): APIResponse {\n    return { statusCode: 200, message: 'Welcome to api!' };\n  }\n}\n","import * as Redis from 'ioredis';\nimport { environment } from '../environments/environment';\n\nexport const redis = new Redis({\n  port: +environment.redisPort,\n  host: environment.redisHost,\n  password: environment.redisPwd\n});","import { Injectable, HttpException, HttpStatus, NotFoundException, BadRequestException, ForbiddenException, UnauthorizedException } from '@nestjs/common';\nimport * as bcrypt from 'bcryptjs';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, Document } from 'mongoose';\nimport { ISendMailOptions } from '@nest-modules/mailer';\nimport { readFileSync }  from 'fs';\n// libs\nimport { APIResponse, IUser, IAuth, User } from '@nomades-network/api-interfaces';\n// app\nimport { getToken, confirmEmailLink } from '../../app.utils';\nimport { environment } from '../../../environments/environment';\nimport { AppMailerService, EMAIL_DEFAULT } from '../../services/mailer.service';\nimport { redis } from '../../app.redis';\nimport { dirname } from 'path';\nimport { XLSService } from '../../services/xls.service';\n\ninterface ICreatedObject {auth?: IAuth, currentUser?: IUser};\n\n@Injectable()\nexport class UsersService {\n\n  constructor(\n    @InjectModel('Auth') private readonly authModel: Model<IAuth & Document>,\n    @InjectModel('User') private readonly userModel: Model<IUser & Document>,\n    private readonly _mailerService: AppMailerService,\n    private readonly _xls: XLSService,\n  ) {}\n\n\n  private async _resetSave({auth, currentUser}: ICreatedObject) {\n    if (auth) await this.authModel.findByIdAndDelete({_id: auth._id}).catch(err => err)\n    if (currentUser) await this.userModel.findByIdAndDelete({_id: currentUser._id}).catch(err => err)\n  }\n\n  private _comparePassword(docPassword: string, password: string): boolean {\n    if (!docPassword) {\n      return false;\n    }\n    return bcrypt.compareSync(  password , docPassword);\n  }\n  \n  async login(data: Partial<IUser & IAuth>): Promise<APIResponse> {\n    // handle params errors\n    if (!data || !data.email || !data.password)\n      throw new BadRequestException();\n    const currentUser = await this.userModel.findOne({email: data.email}).catch(err => err);\n    if (!currentUser || !currentUser.uid) \n      throw new NotFoundException('User not exite. Try other email.');\n    // find user pwd into Auths.Collection\n    const {password = null} = await this.authModel.findOne({_id: currentUser.uid}).catch(err => err);\n    // compar Password\n    if (!this._comparePassword(\n      password,\n      data.password\n    ))\n      throw new ForbiddenException('Password not valid!');\n    // generate token\n    const token = getToken(\n      environment.secretToken,\n      60 * 1000,\n      currentUser\n    );\n    return {\n      statusCode: 200,\n      message: 'User loged',\n      currentUser,\n      token\n    };\n  }\n\n  async create(data: Partial<IUser & IAuth>): Promise<APIResponse> {\n    const created: ICreatedObject = {};\n    if (!data.email || !data.password)\n      throw new BadRequestException();\n    // generate pwd hash\n    let hash = '';\n    try {\n      hash = bcrypt.hashSync(data.password, 10);\n    } catch (err) {\n      throw new HttpException(\n        err,\n        HttpStatus.INTERNAL_SERVER_ERROR\n      );\n    }\n    // create data in Auth Collection\n    const auth = await new this.authModel({\n      email: data.email,\n      password: hash\n    }).save().catch(err => err)\n    if (!auth._id || auth instanceof Error)\n      throw new BadRequestException(auth.errmsg || auth);\n    // memory save auth\n    created.auth = auth;\n    // delete secure key\n    delete data.verified;\n    // create User in User Collection\n    let currentUser: IUser = await new this.userModel(\n      new User({...data, uid: auth._id})\n    ).save().then(res => res.toObject()).catch(err => err);\n    // handle error    \n    if (!currentUser._id || currentUser instanceof Error){\n      this._resetSave(created);\n      throw new BadRequestException((currentUser as any).errmsg || currentUser);\n    }\n    created.currentUser = currentUser;\n    // update user with existing data from students list\n    currentUser = await this._checkExistingStudent(currentUser)\n    // send email to Super admin to confirm new created user\n    // TODO: create logic\n    const {result: resultSuperAdmin = false, ...errorSuperAdmin} = await this._sendEmail({\n      subject: EMAIL_DEFAULT['register'].subject,\n      html: `\n        <p>\n          Nouvelle inscription sur <i>\"nomades.world\"</i><br/>\n          Utilisateur: ${currentUser.firstname} ${currentUser.lastname} \n          Email de connection: ${currentUser.email}\n        </p>\n        <p>\n          Cliquez ici pour authoriser cet utilisateur à consulter \"nomades.world\": <a href=\"https://node29887-env-5468118.jcloud-ver-jpc.ik-server.com/api/users/authorize/${currentUser._id}?user=nomades&action=authorize\">authoriser cet utilisateur</a>\n        </p>\n      `\n    }).catch(err => err);\n    if (!resultSuperAdmin|| resultSuperAdmin instanceof Error){\n      this._resetSave(created);\n      throw new BadRequestException((errorSuperAdmin) ? errorSuperAdmin : resultSuperAdmin.errmsg || resultSuperAdmin);\n    }\n    // send email to created user to explaine confirm flow\n    // create url confirmation\n    const url = await confirmEmailLink(currentUser._id);\n    // defin value for email\n    const subject = EMAIL_DEFAULT['register'].subject;\n    const html = EMAIL_DEFAULT['register'].html(url);\n    const text = EMAIL_DEFAULT['register'].text(url);\n    // send email using private method\n    const {result: resultUser = false, ...errorUser} = await this._sendEmail({\n      to: currentUser.email, subject, html, text\n    }).catch(err => err);\n    // handle error\n    if (!resultUser|| resultUser instanceof Error){\n      this._resetSave(created);\n      throw new BadRequestException((errorUser) ? errorUser : resultUser.errmsg || resultUser);\n    }\n    // generate token\n    const token = getToken(\n      environment.secretToken,\n      60 * 1000,\n      currentUser\n    );\n    // return response\n    return {statusCode: 200, currentUser, token};\n  }\n\n  async getCurrentUser(uid: string): Promise<APIResponse>  {\n    // return {currentUser: null, statusCode: 200}\n    const currentUser = await this._getByUID(uid) //.catch(err => err);\n    if (!currentUser.authorized)\n      throw new UnauthorizedException(`Nous n'avons pas encore authorizer votre compte. Veuillez reésayer de vous connecter plus tard.`);\n    if (!currentUser.verified)\n      throw new ForbiddenException(`Vous n'avez pas encore confirmer votre compte. Veuillez consulter vos email et suivre les instructions que nous vous avons envoyée.`);\n    \n    return {statusCode: 200, currentUser} \n  }\n\n  async getAllUser(): Promise<APIResponse>  {\n    const users = await this._getAll() //.catch(err => err);\n    return {statusCode: 200, users} \n  }\n\n  async getUserById(id: string): Promise<APIResponse>  {\n    const user = await this._getByID(id).catch(err => err);\n    if (!user || user instanceof Error)\n      throw new NotFoundException();\n    return {statusCode: 200, users: [user]} \n  }\n\n  async searchUsers(query: string): Promise<any>  {\n    if (!query){\n      throw new BadRequestException('you have to provide a query to search users');\n    }\n    const users = await this.userModel.aggregate([ \n      {\n        $project:\n          {\n            firstname: { $toLower: \"$firstname\" },\n            lastname: { $toLower: \"$lastname\" },\n            email: { $toLower: \"$email\" }\n          }\n      },\n      { \n        $match: { \n          $or: [\n            { firstname: new RegExp(query) },\n            { lastname: new RegExp(query) },\n            { email: new RegExp(query) }\n          ]\n        }\n      }\n    ]);\n    return {\n      statusCode: 200,\n      message: 'Query search: ' + query,\n      users\n    } \n  }\n\n  private async _getAll(): Promise<IUser[]> {\n    const users = await this.userModel.find()\n    .then(res => \n      (res && res.length > 0)\n        ? res.map(i => i.toObject())\n        : res\n    ).catch(err => err);\n    if (!users) \n      throw new NotFoundException();\n    return users\n  } \n\n  private async _getByID(_id: string): Promise<IUser> {\n    const user = await this.userModel.findOne({_id}).then(res => (res) ? res.toObject() : res).catch(err => err);\n    if (!user) \n      throw new NotFoundException();\n    return user\n  } \n\n  private async  _getByUID(uid: string): Promise<IUser> {\n    const user = await this.userModel.findOne({uid}).then(res => (res) ? res.toObject() : res).catch(err => err);\n    if (!user) \n      throw new NotFoundException();\n    return user\n  } \n\n  async update(data: Partial<IUser>, requestUID: string): Promise<APIResponse> {\n    const findUser = await this.userModel.findOne({_id: data._id}).then(res => (res) ? res.toObject() : res).catch(err => err);\n    if (!findUser) \n      throw new NotFoundException();\n    if (requestUID.toString() !== findUser.uid.toString())\n      throw new ForbiddenException('User ID not match'); \n    const currentUser = await this.userModel.findOneAndUpdate({\n      _id: data._id\n    }, {$set: new User({\n      ...findUser,\n      ...data\n    })}, { new: true, runValidators: true}).exec()\n    .then(res => (res) ? res.toObject() : res)\n    .catch(err => err);\n    // handle error\n    if (!currentUser || !currentUser._id || currentUser instanceof Error)\n      throw new HttpException(\n        currentUser.errmsg || currentUser.message || currentUser,\n        HttpStatus.BAD_REQUEST\n      );\n    return {statusCode: 200, currentUser};\n  }\n\n\n  async confirmEmail(id: string): Promise<APIResponse> {\n    // get user id from redis DB\n    const _id = await redis.get(`${environment.prefix.confirmEmail}${id}`);\n    // handle unexisting user _id\n    if (!_id) {\n      throw new NotFoundException();\n    }\n    // update user with verified: true\n    await this.userModel.updateOne({ _id }, { verified: true }).catch(err => err);\n    // delet redis key\n    await redis.del(`${environment.prefix.confirmEmail}${id}`);\n    // send basic response\n    return {statusCode: 200, message: 'User confirm with success'} \n  }\n\n  async authorizeUser(_id: string): Promise<APIResponse> {\n    // update user with verified: true\n    await this.userModel.updateOne({ _id }, { authorized: true }).catch(err => err);\n    // send basic response\n    return {statusCode: 200, message: 'User authorized with success'} \n  }\n\n\n  private async _sendEmail(options?: ISendMailOptions): Promise<{result: boolean}> {\n    // only run in production\n    if (!environment.production) return {result: true};\n    // handle test user creation\n    if (\n      options &&\n      options.to &&\n      options.to.includes('demo')\n    ) return {result: true};\n    // send email confirmation\n    const {result = false, ...errorSendEmail} = await this._mailerService.sendMail(options).catch(err => err);\n    // handle result error\n    if (!result) {\n      console.error('Unable to send email to new user');\n      throw new HttpException(errorSendEmail, HttpStatus.INTERNAL_SERVER_ERROR);\n    }\n    // returtn result as object\n    return {result};\n  }\n\n  private async _checkExistingStudent(user: IUser) {\n    const students = await new Promise((resolve, reject) => {\n      try {\n        const result = this._xls.excelToJson(__dirname +'/assets/bdd-students.xlsx');\n        const sheet = Object.keys(result)[0];\n        const data = this._xls.normalize(result[sheet]);    \n        resolve(data);\n      } catch (error) {\n        reject(error);\n      }\n    });\n    console.log('-----', students);\n    if (!students || (students as []).length <= 0) return user;\n    // search existing user in students list\n    const find = (students as any[]).find(s => \n      (s.nom || '').toLowerCase() === user.lastname.toLowerCase() &&\n      (s.prenom || '').toLowerCase() === user.firstname.toLowerCase()\n    );\n    // handle unexisting user\n    if (!find) return user;\n    // update user with existing data\n    const objectReady: IUser = {\n      email: user.email,\n      firstname: find.prenom || user.firstname,\n      lastname: find.nom || user.lastname,\n      contact: {\n        street: find.adresse || (user.contact || {street: null}).street,\n        zipCode: find.code_postal || (user.contact || {zipCode: null}).zipCode,\n        city: find.ville || (user.contact || {city: null}).city,\n        country: find.pays || (user.contact || {country: null}).country\n      },\n      mobile_phone: find.mobile || user.mobile_phone,\n      bday: find.date_de_naissance || user.bday,\n      student_number: find.numero_eleve || user.student_number,\n      student_year: find.numero_annee || user.student_year,\n      trainings: []\n    };\n    // add existing trainings data\n    if (find && find.dmm)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Digital Marketing Manager',\n        cerfifiedState: find.dmm,\n        created: new Date()\n      }];\n    if (find && find.wd)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Web Designer',\n        cerfifiedState: find.wd,\n        created: new Date()\n      }];\n    if (find && find.wpr)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Web Programmer',\n        cerfifiedState: find.wpr,\n        created: new Date()\n      }];\n    if (find && find.mwad)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Mobile Web Application Developper',\n        cerfifiedState: find.mwad,\n        created: new Date()\n      }];\n    if (find && find.wdev)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Web Developper',\n        cerfifiedState: find.wdev,\n        created: new Date()\n      }];\n    if (find && find.drupal)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Drupal',\n        cerfifiedState: find.drupal,\n        created: new Date()\n      }];\n    if (find && find.symfony)\n      objectReady.trainings = [...objectReady.trainings, {\n        name: 'Symfony',\n        cerfifiedState: find.symfony,\n        created: new Date()\n      }];\n    if (find && find.webpublisher)\n    objectReady.trainings = [...objectReady.trainings, {\n      name: 'Web Publisher',\n      cerfifiedState: find.webpublisher,\n      created: new Date()\n    }];\n    // request db to update user object updated\n    const currentUser = await this.userModel.findOneAndUpdate({_id: user._id}, objectReady, { new: true, runValidators: true}).exec()\n      .then(res => (res) ? res.toObject() : res)\n      .catch(err => err);\n    // handle error\n    if (!currentUser || !currentUser._id || currentUser instanceof Error)\n      throw new HttpException(\n        currentUser.errmsg || currentUser.message || currentUser,\n        HttpStatus.BAD_REQUEST\n      );\n    // return result user updated\n    console.log('updated user with data from student list: ', currentUser);\n    return currentUser;\n  }\n}\n","import { Schema, Document } from 'mongoose';\n\nexport const userTrainingSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  cerfifiedState: Number,\n  certifiedProject: String,\n  certifiedProjectUrl: String,\n  created: {\n    type: Date,\n    default: new Date()\n  },\n});\n","module.exports = require(\"@nestjs/platform-express\");","module.exports = require(\"body-parser\");","module.exports = require(\"jsonwebtoken\");","export * from './lib/api-schemas';\n","module.exports = require(\"bcryptjs\");","import { IUser } from './users';\n\nexport * from './users';\n\nexport interface Message {\n  message: string;\n}\n\nexport interface APIResponse {\n  statusCode: number;\n  currentUser?: IUser;\n  users?: IUser[];\n  token?: string;\n  message?: string;\n  error?: any\n}\n","export * from './users.interface';\nexport * from './users.model';","import { IAddress } from '../address';\nimport { ITraining } from '../training';\n\nexport interface IAuth {\n  _id: string;\n  password: string;\n};\n\nexport interface IUserSkill {\n  _id?: string;\n  name: string;\n  level?: number\n}\n\nexport interface IUser {\n  _id?: string;\n  uid?: string;\n  email: string;\n  firstname?: string;\n  lastname?: string;\n  created?: number;\n  // toggle authorization\n  authorized?: boolean;\n  verified?: boolean;\n  // datas\n  avatar?: string;\n  desc?: string;\n  job?: string;\n  bday?: Date;\n  student_number?: number;\n  student_year?: number;\n  mobile_phone?: string;\n  skills?: IUserSkill[];\n  contact?: IAddress;\n  trainings?: ITraining[];\n}","import { IUser, IUserSkill } from './users.interface';\nimport { ITraining } from '../training';\nimport { IAddress } from '../address';\n\nexport class User implements IUser {\n  public _id?: string;\n  public uid?: string;\n  public email: string;\n  public firstname?: string;\n  public lastname?: string;\n  public created?: number;\n  public verified?: boolean;\n  public authorized?: boolean;\n  // datas\n  public bday?: Date;\n  public student_number?: number;\n  public student_year?: number;\n  public mobile_phone?: string;\n\n  public avatar?: string;\n  public desc?: string;\n  public job?: string;\n  public skills?: IUserSkill[];\n  public contact?: IAddress;\n  public trainings?: ITraining[];\n  \n  constructor(params: Partial<IUser>) {\n    Object.assign(this, params);\n  }\n}","export * from './user-schema';\nexport * from './user-training.schema';","import { Schema, Document } from 'mongoose';\nimport { IUser } from '@nomades-network/api-interfaces';\nimport { userTrainingSchema } from './user-training.schema';\nimport { userSkillSchema } from './user-skill.schema';\n\nexport const authSchema = new Schema({\n  password: {\n    type: String,\n    required: true,\n    // match: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n    index: true\n  }\n});\n\nexport const userSchema = new Schema<IUser & Document>({\n  uid: {\n    type: Schema.Types.ObjectId,\n    ref: 'auths',\n    required: true,\n    index: true\n  },\n  avatar: String,\n  email: {\n    type: String,\n    required: true,\n    match: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n    unique: true,\n    index: true\n  },\n  lastname: {\n    type: String,\n    required: true,\n    minlength: 1\n  },\n  firstname: {\n    type: String,\n    require: true,\n    minlength: 1\n  },\n  contact: {\n    street: String,\n    street2: String,\n    street_number: String,\n    zipCode: String,\n    city: String,\n    state: String,\n    country: String,\n    countryCode: String,\n    default: String,  \n  },\n  created: {\n    type: Date,\n    required: false,\n    default: new Date()\n  },\n  desc: String,\n  job: String,\n\n  bday: Date,\n  student_number: Number,\n  student_year: Number,\n  mobile_phone: String,\n\n  skills: [userSkillSchema],\n  trainings: [userTrainingSchema],\n  // authorization control\n  verified: Boolean, // email confirmation\n  authorized: Boolean // admin activation\n});","module.exports = require(\"@nestjs/core\");","import { Module, RequestMethod } from '@nestjs/common';\nimport { RouteInfo, MiddlewareConsumer } from '@nestjs/common/interfaces';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MailerModule } from '@nest-modules/mailer';\nimport { MongooseModule, MongooseModuleOptions } from '@nestjs/mongoose';\n// app\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { XLSService } from './services/xls.service';\nimport { environment } from '../environments/environment';\nimport { AuthorizationMiddleware } from './authorization.middleware';\n// app/features\nimport { UsersModule } from './features/users/users.module';\n\nconst PROTECTED_ROUTES: RouteInfo[] = [\n  {\n    path: '/users',\n    method: RequestMethod.GET\n  },\n  {\n    path: '/users/isAuth',\n    method: RequestMethod.GET\n  },\n  {\n    path: '/users/search',\n    method: RequestMethod.GET\n  },\n  {\n    path: '/users/:id',\n    method: RequestMethod.PUT\n  },\n  {\n    path: '/users/:id',\n    method: RequestMethod.GET\n  }\n];\n\nconst mongooseOptions: MongooseModuleOptions = {\n  \n  // fix mongoose deprecated warning\n  // doc: https://mongoosejs.com/docs/deprecations.html#-findandmodify-\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useFindAndModify: false,\n  useCreateIndex: true\n};\n\n@Module({\n  imports: [\n\n    MongooseModule.forRoot(environment.getDBHost(), mongooseOptions),\n    // MongooseModule.forRootAsync({\n    //   useFactory: () => {\n    //     console.log('check db url connection: -------', environment.getDBHost());\n    //     return <MongooseModuleOptions>{\n    //       uri: environment.getDBHost(),\n    //       useNewUrlParser: true,\n    //       useUnifiedTopology: true,\n    //       useCreateIndex: true,\n    //     }\n    //   },\n    // }),\n    MailerModule.forRootAsync({\n      useFactory: () => ({\n        transport: `smtps://${environment.mailer.user}:${environment.mailer.pass}@${environment.mailer.host}`,\n        // defaults: {\n        //   from:'\"nest-modules\" <modules@nestjs.com>',\n        // },\n        // template: {\n        //   dir: __dirname + '/templates',\n        //   adapter: new HandlebarsAdapter(), // or new PugAdapter()\n        //   options: {\n        //     strict: true,\n        //   },\n        // },\n      }),\n    }),\n    MulterModule.register({\n      dest: __dirname + '/assets',\n    }),\n    UsersModule\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    XLSService\n  ]\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuthorizationMiddleware)\n      .forRoutes(...PROTECTED_ROUTES);\n  }\n}\n","import { Controller, Get, Query, Post, UseInterceptors, UploadedFiles, UploadedFile } from '@nestjs/common';\nimport { FilesInterceptor, FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\n// libs\nimport { APIResponse } from '@nomades-network/api-interfaces';\n// app\nimport { AppService } from './app.service';\nimport { environment } from '../environments/environment';\nimport { ApiConsumes, ApiBody, ApiProperty } from '@nestjs/swagger';\nimport { XLSService } from './services/xls.service';\nimport { editFileName } from './app.utils';\n\nclass FileUploadDto {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  file: any;\n}\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly _xls: XLSService\n  ) {}\n\n  @Get('')\n  welcome(): APIResponse {\n    return this.appService.getData();\n  }\n  \n  @Get('env')\n  getEnv(\n    @Query('user') user: string,\n    @Query('password') password: string,\n  ) {\n    return (user === 'webmaster-fazio' && password === 'debug')\n      ? {...environment}\n      : {version: environment.version}\n  }\n\n  @Get('hello')\n  getData(): APIResponse {\n    return this.appService.getData();\n  }\n\n  @Post('upload_bdd')\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'Student exel bdd',\n    type: FileUploadDto,\n  })\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: __dirname + '/assets',\n        filename: editFileName,\n      }),\n      fileFilter: (req, file, callback) => {\n        if (!file.originalname.match(/\\.(xlsx)$/)) {\n          return callback(new Error('Only xlsx files are allowed!'), false);\n        }\n        callback(null, true);\n      }\n    }),\n  )\n  async uploadedFile(@UploadedFile() file) {\n    const result = this._xls.excelToJson(file.path);\n    const sheet = Object.keys(result)[0];\n    const students = this._xls.normalize(result[sheet]);    \n    return {status: 200, message: 'Success import student database', students};\n  }\n}\n\n","module.exports = require(\"multer\");","module.exports = require(\"fs\");","module.exports = require(\"convert-excel-to-json\");","module.exports = require(\"uuid\");","module.exports = require(\"ioredis\");","module.exports = require(\"path\");","import { Injectable, NestMiddleware, UnauthorizedException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n// app\nimport { checkAuthentication } from './app.utils';\n\n@Injectable()\nexport class AuthorizationMiddleware implements NestMiddleware {\n  async use(req: Request, res: Response, next: Function) {\n      const isAuth = await checkAuthentication(req);\n      if (!isAuth) \n        throw new UnauthorizedException('You need to be authenticated to access this part of the API');\n      next();\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n// libs\nimport { authSchema, userSchema } from '@nomades-network/api-schemas';\n// app\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { AppMailerService } from '../../services/mailer.service';\nimport { XLSService } from '../../services/xls.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: 'User', schema: userSchema },\n      { name: 'Auth', schema: authSchema }\n    ])\n  ],\n  providers: [UsersService, AppMailerService, XLSService],\n  controllers: [UsersController]\n})\nexport class UsersModule {}\n","import { Schema, Document } from 'mongoose';\n\nexport const userSkillSchema = new Schema({\n  name: {\n    type: String,\n    required: true\n  },\n  level: Number\n});\n","import { Controller, Get, Post, BadRequestException, Req, Body, UnauthorizedException, Put, Param, HttpException, Query } from '@nestjs/common';\nimport { Request } from 'express';\n\n// libs\nimport { APIResponse, IUser } from '@nomades-network/api-interfaces';\n\n// app\nimport { UsersService } from './users.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private readonly userService: UsersService\n  ) {}\n\n  @Get('')\n  async getAllUsers(\n    @Req() req: Request\n  ): Promise<APIResponse> {\n    // check token\n    const user = (req as any).decoded;\n    // handle error\n    if (!user || !user.uid) throw new UnauthorizedException();\n    // return response    \n    return this.userService.getAllUser();\n  }\n\n  @Get('isAuth')\n  async isAuth(\n    @Req() req: Request\n  ): Promise<APIResponse> {\n    // check token\n    const user = (req as any).decoded;\n    // handle error\n    if (!user || !user.uid) throw new UnauthorizedException();\n    // return response\n    return this.userService.getCurrentUser(user.uid);\n  }\n\n  @Get('search')\n  async searchUsers(\n    @Req() req: Request,\n    @Query('query') value: string,\n  ): Promise<APIResponse> {\n    // check token\n    const user = (req as any).decoded;\n    // handle error\n    if (!user || !user.uid) throw new UnauthorizedException();\n    if (!value) throw new HttpException('No query in request', 404);\n    // return response    \n    return this.userService.searchUsers(value.toLowerCase());\n  }\n\n  @Get('/confirm/:id')\n  async confirmEmail(\n    @Param('id') id: string,\n  ): Promise<APIResponse> {\n    return this.userService.confirmEmail(id);\n  }\n\n  @Get('/authorize/:id')\n  async authorizeUser(\n    @Param('id') id: string,\n    @Query('user') user: string,\n    @Query('action') action: string,\n  ): Promise<APIResponse> {\n    if (!id) throw new BadRequestException('incorrect params');\n    if (!user || user !== 'nomades') throw new BadRequestException('incorrect params');\n    if (!action || action !== 'authorize') throw new BadRequestException('incorrect params');\n    return this.userService.authorizeUser(id);\n  }\n\n  @Get(':id')\n  async getById(\n    @Req() req: Request,\n    @Param('id') id: string,\n  ): Promise<APIResponse> {\n    // check token\n    const user = (req as any).decoded;\n    // handle error\n    if (!user || !user.uid) throw new UnauthorizedException();\n    if (!id) throw new HttpException('No user id in request', 404);\n    // return response    \n    return this.userService.getUserById(id);\n  }\n\n  @Post('login')\n  async login(\n    @Body('email') email: string,\n    @Body('password') password: string\n  ): Promise<APIResponse> {\n    // handle error\n    if (!email || !password) \n      throw new BadRequestException('Invalide request parameters');\n    // return response\n    return await this.userService.login({email, password});\n  }\n\n  @Post('create')\n  async create(\n    @Body() user: {email: string, password: string}\n  ): Promise<APIResponse> {\n    // handle error\n    if (!user || !user.email || !user.password) \n      throw new BadRequestException('Invalide request parameters');\n    // return response\n    return await this.userService.create({...user});\n  }\n\n  @Put(':id')\n  async update(\n    @Body() user: Partial<IUser>,\n    @Req() req: Request\n  ): Promise<APIResponse> {\n    // check token\n    const userToken: Partial<IUser> = (req as any).decoded;\n    // handle error\n    if (!user || !user._id) \n      throw new BadRequestException('Invalide request parameters');\n    // return response\n    return await this.userService.update(user,  userToken.uid);\n  }\n\n}\n","import { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable, NestInterceptor, CallHandler, ExecutionContext } from '@nestjs/common';\n\n\n\n@Injectable()\nexport class ErrorsInterceptor implements NestInterceptor {\n\n  constructor() {}\n    \n  intercept(context: ExecutionContext, next: CallHandler<any>): Observable<any> {\n    const call$ = next.handle();\n    return call$.pipe(\n      // tap(() => console.log('INTERCEPT after: ', statusCode)),\n      catchError(error => {\n        // console.log('INTERCEPT after error: ', error, error.statusCode )\n        return throwError(error);\n      }),\n    );\n  }\n}","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","\nimport * as lodash from 'lodash';\nimport { ExceptionFilter, Catch, HttpException, ArgumentsHost, HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { environment } from '../environments/environment';\n\n\nconst isString = (value: any): value is string => lodash.isString(value);\n\ninterface ICustomError { \n  statusCode: number,\n  error: any,\n  message: string\n}\n\n@Catch()\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    // console.log('YYYYY', exception);\n    // get executing ctx\n    const ctx = host.switchToHttp();\n    // get response\n    const response = ctx.getResponse<Response>();\n    // get request\n    const request = ctx.getRequest<Request>();\n    // get handle status\n    const status = exception instanceof HttpException\n      ? exception.getStatus()\n      : HttpStatus.INTERNAL_SERVER_ERROR;\n    // get error options\n    let error = exception instanceof HttpException\n      ? exception.getResponse() as ICustomError\n      : null;\n    if (!error && exception && exception.message)\n      error = exception.message;\n    if (!error && exception && (exception as any).error)\n      error = (exception as any).error;\n    // extract message from error\n    const msg = (isString(error))\n      ? error\n      : (error || {message: null}).message ||\n        (error || {error: null}).error ||\n        (error || {error: {message: null}}).error.message ||\n        'error server';\n    // formating data response\n    const data = {\n      status,\n      message: msg,\n      path: request.url,\n      userToken: (request as any).decoded,\n      method: request.method,\n      options: {\n        body: request.body,\n        query: request.query,\n      },\n      timestamp: new Date().toISOString(),\n      debug: !environment.production ? exception.stack : null,\n    };\n    return response.status(status).jsonp(data);\n  }\n\n}","module.exports = require(\"lodash\");","import { NestFactory } from '@nestjs/core';\nimport * as bodyParser from 'body-parser';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { ErrorsInterceptor } from './app/app-error.interceptor';\nimport { HttpExceptionFilter } from './app/app-errors.filter';\n\n\nexport const INTERCEPTORS = [\n  new ErrorsInterceptor()\n];\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const {globalPrefix = null} = environment;\n  app.setGlobalPrefix(globalPrefix);\n  // app.use(helmet());\n  // app.use(compression());\n  app.use(bodyParser.json({ limit: '1mb' }));\n  app.use(bodyParser.urlencoded({ extended: true }));\n  // app.use(rateLimit({ max: 1000, windowMs: 15 * 60 * 1000 }));\n  app.enableCors();\n  // http error filter\n  app.useGlobalFilters(new HttpExceptionFilter());\n  // add global interceptors\n  app.useGlobalInterceptors(\n    ...INTERCEPTORS,\n  );\n  // buid api doc\n  const options = new DocumentBuilder()\n    .setTitle('Nomades Network API Endpoint')\n    .setDescription('Nomades Network Server API documentation')\n    .setVersion(environment.version)\n    .build();\n  const document = SwaggerModule.createDocument(app, options);\n  SwaggerModule.setup(globalPrefix, app, document);\n  // start server api\n  const {port = null} = environment;\n  await app.listen(port, () => {\n    console.log('Listening at http://localhost:' + port + '/' + globalPrefix);\n  });\n}\n\nbootstrap();\n"],"sourceRoot":""}